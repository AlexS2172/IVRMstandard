#include "StdAfx.h"
#include "SyntheticEquity.h"
#include "AssetColl.h"
//--------------------------------------------------------------------------------//
CSyntheticEquity::CSyntheticEquity(void)
{
}
//--------------------------------------------------------------------------------//
CSyntheticEquity::~CSyntheticEquity(void)
{
}
//--------------------------------------------------------------------------------//
void CSyntheticEquity::AddComponent(IBasketAssetComponentPtr spComponent)
{
	try
	{
		if (static_cast<bool>(spComponent) && static_cast<bool>(m_spComponents))
		{
			IAssetPtr spAsset = NULL;

			//_CHK(spComponent->get_Asset(&spAsset), _T("Fail to get Asset."));

			if (static_cast<bool>(spAsset))
			{
				LONG lID = 0;
				BSTR bsSymbol = NULL;
				IBasketAssetComponentPtr spAdded = NULL;

				spAsset->get_ID(&lID);
				spAsset->get_Symbol(&bsSymbol);

				_CHK(m_spComponents->Add(lID, bsSymbol, spComponent.GetInterfacePtr(), &spAdded), 
					_T("Fail to add synthetic component."));
			}
		}
	}
	catch (_com_error& err)
	{
		TRACE_COM_ERROR(err);		
	}
	catch (...)
	{
		TRACE_UNKNOWN_ERROR();
	};
};
//--------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------//